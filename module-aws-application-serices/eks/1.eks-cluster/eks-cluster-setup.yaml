AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation template to provision an EKS Cluster with prerequisites'
Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsHostnames: true

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.1.0/24'
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs '' ]

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.2.0/24'
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 1, !GetAZs '' ]

  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EKSClusterRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: MyEKSCluster
      RoleArn: !GetAtt EKSClusterRole.Arn
      ResourcesVpcConfig:
        SubnetIds:
          - !Ref PublicSubnet1
          - !Ref PublicSubnet2

Outputs:
  EKSClusterEndpoint:
    Description: 'Endpoint of the provisioned EKS Cluster'
    Value: !GetAtt [ EKSCluster, Endpoint ]

  EKSClusterARN:
    Description: 'ARN of the provisioned EKS Cluster'
    Value: !GetAtt [ EKSCluster, Arn ]

  ClusterName:
    Description: "The name of the EKS Cluster"
    Value: 
      Ref: "EKSCluster"
    Export:
      Name: "EKSCluster::ClusterName"

  SubnetId1:
    Description: "The ID of the first subnet"
    Value: 
      Ref: "PublicSubnet1"
    Export:
      Name: "EKSCluster::SubnetId1"

  SubnetId2:
    Description: "The ID of the second subnet"
    Value: 
      Ref: "PublicSubnet2"
    Export:
      Name: "EKSCluster::SubnetId2"
